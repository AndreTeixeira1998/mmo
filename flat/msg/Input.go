// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package msg

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Input struct {
	_tab flatbuffers.Struct
}

func (rcv *Input) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Input) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *Input) Up() bool {
	return rcv._tab.GetBool(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *Input) MutateUp(n bool) bool {
	return rcv._tab.MutateBool(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *Input) Down() bool {
	return rcv._tab.GetBool(rcv._tab.Pos + flatbuffers.UOffsetT(1))
}
func (rcv *Input) MutateDown(n bool) bool {
	return rcv._tab.MutateBool(rcv._tab.Pos+flatbuffers.UOffsetT(1), n)
}

func (rcv *Input) Left() bool {
	return rcv._tab.GetBool(rcv._tab.Pos + flatbuffers.UOffsetT(2))
}
func (rcv *Input) MutateLeft(n bool) bool {
	return rcv._tab.MutateBool(rcv._tab.Pos+flatbuffers.UOffsetT(2), n)
}

func (rcv *Input) Right() bool {
	return rcv._tab.GetBool(rcv._tab.Pos + flatbuffers.UOffsetT(3))
}
func (rcv *Input) MutateRight(n bool) bool {
	return rcv._tab.MutateBool(rcv._tab.Pos+flatbuffers.UOffsetT(3), n)
}

func CreateInput(builder *flatbuffers.Builder, up bool, down bool, left bool, right bool) flatbuffers.UOffsetT {
	builder.Prep(1, 4)
	builder.PrependBool(right)
	builder.PrependBool(left)
	builder.PrependBool(down)
	builder.PrependBool(up)
	return builder.Offset()
}
